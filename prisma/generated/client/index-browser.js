
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  avatar: 'avatar',
  otpToken: 'otpToken',
  otpExpires: 'otpExpires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  refreshToken: 'refreshToken',
  isApproved: 'isApproved'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name_en: 'name_en',
  category_icon: 'category_icon',
  category_image: 'category_image',
  category_Alt_en: 'category_Alt_en',
  categoryLink_en: 'categoryLink_en',
  specification_image: 'specification_image',
  specification_image_alt: 'specification_image_alt'
};

exports.Prisma.CategoryTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  name: 'name',
  iconAlt: 'iconAlt',
  categoryLink: 'categoryLink',
  description: 'description',
  categoryId: 'categoryId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  model_name_en: 'model_name_en',
  product_name: 'product_name',
  productImage: 'productImage',
  productImage_Alt: 'productImage_Alt',
  status_en: 'status_en',
  stars: 'stars',
  reviews: 'reviews',
  productDescription_en: 'productDescription_en',
  model_description: 'model_description',
  introduction: 'introduction'
};

exports.Prisma.ProductTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  name: 'name',
  imageAlt: 'imageAlt',
  status: 'status',
  productDescription: 'productDescription',
  model_description: 'model_description',
  introduction: 'introduction',
  productId: 'productId'
};

exports.Prisma.ModelSpecificationScalarFieldEnum = {
  id: 'id',
  title_en: 'title_en'
};

exports.Prisma.ModelSpecificationTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  title: 'title',
  modelspecId: 'modelspecId'
};

exports.Prisma.AdvantageScalarFieldEnum = {
  id: 'id',
  heading_en: 'heading_en',
  title_en: 'title_en'
};

exports.Prisma.AdvantageTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  heading: 'heading',
  title: 'title',
  advantageId: 'advantageId'
};

exports.Prisma.SpecificationScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  productId: 'productId',
  speed_en: 'speed_en',
  paperSpecification_en: 'paperSpecification_en',
  sizeRange_en: 'sizeRange_en'
};

exports.Prisma.SpecificationTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  speed: 'speed',
  paperSpecification: 'paperSpecification',
  sizeRange: 'sizeRange',
  specificationId: 'specificationId'
};

exports.Prisma.ApplicationDataScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  title_en: 'title_en',
  src: 'src',
  src_alt_en: 'src_alt_en'
};

exports.Prisma.ApplicationDataTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  title: 'title',
  src_alt: 'src_alt',
  applicationDataId: 'applicationDataId'
};

exports.Prisma.TechnicalSpecificationScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  feature_en: 'feature_en',
  spec_en: 'spec_en'
};

exports.Prisma.TechnicalSpecificationTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  feature: 'feature',
  spec: 'spec',
  technicalSpecificationId: 'technicalSpecificationId'
};

exports.Prisma.RelatedProductScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  title_en: 'title_en',
  description_en: 'description_en',
  image: 'image',
  imageAlt_en: 'imageAlt_en',
  category_icon: 'category_icon',
  category_Alt_en: 'category_Alt_en',
  machineType: 'machineType'
};

exports.Prisma.RelatedProductTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  title: 'title',
  description: 'description',
  imageAlt: 'imageAlt',
  category_Alt: 'category_Alt',
  machineType: 'machineType',
  relatedProductId: 'relatedProductId'
};

exports.Prisma.ProcessStepScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  title_en: 'title_en',
  description_en: 'description_en',
  process_image: 'process_image',
  process_image_alt: 'process_image_alt'
};

exports.Prisma.ProcessStepTranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  title: 'title',
  description: 'description',
  processStepId: 'processStepId'
};

exports.Prisma.CTAScalarFieldEnum = {
  id: 'id',
  text_en: 'text_en',
  description_en: 'description_en',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CTATranslationScalarFieldEnum = {
  id: 'id',
  language: 'language',
  text: 'text',
  description: 'description',
  ctaId: 'ctaId'
};

exports.Prisma.TranslationTaskScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  texts: 'texts',
  language: 'language',
  status: 'status',
  attempts: 'attempts',
  lastError: 'lastError',
  processingStartedAt: 'processingStartedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  apiKeyId: 'apiKeyId',
  apiUrl: 'apiUrl'
};

exports.Prisma.ContactSubmissionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  keyValue: 'keyValue',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastUsedAt: 'lastUsedAt',
  rateLimitPerMin: 'rateLimitPerMin',
  rateLimitCount: 'rateLimitCount',
  rateLimitReset: 'rateLimitReset',
  notes: 'notes'
};

exports.Prisma.ApiKeyUsageScalarFieldEnum = {
  id: 'id',
  apiKeyId: 'apiKeyId',
  requestAt: 'requestAt',
  statusCode: 'statusCode',
  durationMs: 'durationMs',
  endpoint: 'endpoint',
  errorMessage: 'errorMessage'
};

exports.Prisma.ApiConfigScalarFieldEnum = {
  id: 'id',
  name: 'name',
  value: 'value',
  description: 'description',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  apiKeyId: 'apiKeyId',
  apiConfigId: 'apiConfigId',
  action: 'action',
  details: 'details',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  user: 'user',
  admin: 'admin'
};

exports.LanguageCode = exports.$Enums.LanguageCode = {
  en: 'en',
  fr: 'fr',
  hi: 'hi',
  ta: 'ta'
};

exports.MachineType = exports.$Enums.MachineType = {
  Mechanical: 'Mechanical',
  Servo: 'Servo'
};

exports.Prisma.ModelName = {
  User: 'User',
  Category: 'Category',
  CategoryTranslation: 'CategoryTranslation',
  Product: 'Product',
  ProductTranslation: 'ProductTranslation',
  modelSpecification: 'modelSpecification',
  modelSpecificationTranslation: 'modelSpecificationTranslation',
  Advantage: 'Advantage',
  AdvantageTranslation: 'AdvantageTranslation',
  Specification: 'Specification',
  SpecificationTranslation: 'SpecificationTranslation',
  ApplicationData: 'ApplicationData',
  ApplicationDataTranslation: 'ApplicationDataTranslation',
  TechnicalSpecification: 'TechnicalSpecification',
  TechnicalSpecificationTranslation: 'TechnicalSpecificationTranslation',
  RelatedProduct: 'RelatedProduct',
  RelatedProductTranslation: 'RelatedProductTranslation',
  ProcessStep: 'ProcessStep',
  ProcessStepTranslation: 'ProcessStepTranslation',
  CTA: 'CTA',
  CTATranslation: 'CTATranslation',
  TranslationTask: 'TranslationTask',
  ContactSubmission: 'ContactSubmission',
  ApiKey: 'ApiKey',
  ApiKeyUsage: 'ApiKeyUsage',
  ApiConfig: 'ApiConfig',
  AuditLog: 'AuditLog'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
